generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  File          File[]
  Message       Message[]
}

model File {
  id        String    @id @default(cuid())
  name      String
  url       String
  key       String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String?
  User      User?     @relation(fields: [userId], references: [id])
}

model Message {
  id            String   @id @default(cuid())
  userId        String?
  fileId        String?
  text          String   @db.Text()
  isUserMessage Boolean
  isMarkdown    Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  File          File?    @relation(fields: [fileId], references: [id])
  User          User?    @relation(fields: [userId], references: [id])
}
